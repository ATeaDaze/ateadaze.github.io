// TODO: add keyboard support, organize notes in a more readable format (Hz are not intuitive),
// maybe add an offset to the array so that C[4] would be equal to C4 (offset = +2)

// Piano notes:   [Frequencies in Hz]                     Piano key reference chart
const C = [ [ 65,  130, 261, 523, 1046, 2093  ], [ "C2", "C3", "C4", "C5", "C6", "C7" ] ];
const D = [ [ 73,  146, 293, 587, 1174, 2349  ], [ "D2", "D3", "D4", "D5", "D6", "D7" ] ];
const E = [ [ 82,  164, 329, 659, 1318, 2637  ], [ "E2", "E3", "E4", "E5", "E6", "E7" ] ];
const F = [ [ 87,  174, 349, 698, 1396, 2793  ], [ "F2", "F3", "F4", "F5", "F6", "F7" ] ];
const G = [ [ 98,  196, 391, 783, 1568, 3136  ], [ "G2", "G3", "G4", "G5", "G6", "G7" ] ];
const A = [ [ 110, 220, 440, 880, 1760, 3520  ], [ "A2", "A3", "A4", "A5", "A6", "A7" ] ];
const B = [ [ 123, 246, 493, 987, 1975, 3951  ], [ "B2", "B3", "B4", "B5", "B6", "B7" ] ];
const restSymbol = "---", pauseSymbol = "PAUSED";

// Final Fantasy Prelude: C Major (add9)
const trackNotesFFPrelude = [ [C[0][2], 8, C[1][2] ],
  [C[0][1], 8, C[1][1]], [D[0][1], 8, D[1][1]], [E[0][1], 8, E[1][1]], [G[0][1], 8, G[1][1]],
  [C[0][2], 8, C[1][2]], [D[0][2], 8, D[1][2]], [E[0][2], 8, E[1][2]], [G[0][2], 8, G[1][2]],
  [C[0][3], 8, C[1][3]], [D[0][3], 8, D[1][3]], [E[0][3], 8, E[1][3]], [G[0][3], 8, G[1][3]],
  [C[0][4], 8, C[1][4]], [D[0][4], 8, D[1][4]], [E[0][4], 8, E[1][4]], [G[0][4], 8, G[1][4]],
  // C(add9) Down
  [C[0][5], 8, C[1][5]], [G[0][4], 8, G[1][4]], [E[0][4], 8, E[1][4]], [D[0][4], 8, D[1][4]],
  [C[0][4], 8, C[1][4]], [G[0][3], 8, G[1][3]], [E[0][3], 8, E[1][3]], [D[0][3], 8, D[1][3]],
  [C[0][3], 8, C[1][3]], [G[0][2], 8, G[1][2]], [E[0][2], 8, E[1][2]], [D[0][2], 8, D[1][2]],
  [C[0][2], 8, C[1][2]], [G[0][1], 8, G[1][1]], [E[0][1], 8, E[1][1]], [D[0][1], 8, D[1][1]],
  [C[0][1], 8, C[1][1]],
  // Am(add9) Up
  [A[0][1], 8, A[1][1]], [B[0][1], 8, B[1][1]], [C[0][2], 8, C[1][2]], [E[0][2], 8, E[1][2]],
  [A[0][2], 8, A[1][2]], [B[0][2], 8, B[1][2]], [C[0][3], 8, C[1][3]], [E[0][3], 8, E[1][3]],
  [A[0][3], 8, A[1][3]], [B[0][3], 8, B[1][3]], [C[0][4], 8, C[1][4]], [E[0][4], 8, E[1][4]],
  [A[0][4], 8, A[1][4]], [B[0][4], 8, B[1][4]], [C[0][5], 8, C[1][5]], [E[0][5], 8, E[1][5]],
  // Am(add9) Down
  [A[0][5], 8, A[1][5]], [E[0][5], 8, E[1][5]], [C[0][5], 8, C[1][5]], [B[0][4], 8, B[1][4]],
  [A[0][4], 8, A[1][4]], [E[0][4], 8, E[1][4]], [C[0][4], 8, C[1][4]], [B[0][3], 8, B[1][3]],
  [A[0][3], 8, A[1][3]], [E[0][3], 8, E[1][3]], [C[0][3], 8, C[1][3]], [B[0][2], 8, B[1][2]],
  [A[0][2], 8, A[1][2]], [E[0][2], 8, E[1][2]], [C[0][2], 8, C[1][2]], [B[0][1], 8, B[1][1]],
  // C(add9) Up (repeat)
  [C[0][1], 8, C[1][1]], [D[0][1], 8, D[1][1]], [E[0][1], 8, E[1][1]], [G[0][1], 8, G[1][1]],
  [C[0][2], 8, C[1][2]], [D[0][2], 8, D[1][2]], [E[0][2], 8, E[1][2]], [G[0][2], 8, G[1][2]],
  [C[0][3], 8, C[1][3]], [D[0][3], 8, D[1][3]], [E[0][3], 8, E[1][3]], [G[0][3], 8, G[1][3]],
  [C[0][4], 8, C[1][4]], [D[0][4], 8, D[1][4]], [E[0][4], 8, E[1][4]], [G[0][4], 8, G[1][4]],
  // C(add9) Down
  [C[0][5], 8, C[1][5]], [G[0][4], 8, G[1][4]], [E[0][4], 8, E[1][4]], [D[0][4], 8, D[1][4]],
  [C[0][4], 8, C[1][4]], [G[0][3], 8, G[1][3]], [E[0][3], 8, E[1][3]], [D[0][3], 8, D[1][3]],
  [C[0][3], 8, C[1][3]], [G[0][2], 8, G[1][2]], [E[0][2], 8, E[1][2]], [D[0][2], 8, D[1][2]],
  [C[0][2], 8, C[1][2]], [G[0][1], 8, G[1][1]], [E[0][1], 8, E[1][1]], [D[0][1], 8, D[1][1]],
  [C[0][1], 8, C[1][1]],
  // Am(add9) Up (repeat)
  [A[0][1], 8, A[1][1]], [B[0][1], 8, B[1][1]], [C[0][2], 8, C[1][2]], [E[0][2], 8, E[1][2]],
  [A[0][2], 8, A[1][2]], [B[0][2], 8, B[1][2]], [C[0][3], 8, C[1][3]], [E[0][3], 8, E[1][3]],
  [A[0][3], 8, A[1][3]], [B[0][3], 8, B[1][3]], [C[0][4], 8, C[1][4]], [E[0][4], 8, E[1][4]],
  [A[0][4], 8, A[1][4]], [B[0][4], 8, B[1][4]], [C[0][5], 8, C[1][5]], [E[0][5], 8, E[1][5]],
  // Am(add9) Down
  [A[0][5], 8, A[1][5]], [E[0][5], 8, E[1][5]], [C[0][5], 8, C[1][5]], [B[0][4], 8, B[1][4]],
  [A[0][4], 8, A[1][4]], [E[0][4], 8, E[1][4]], [C[0][4], 8, C[1][4]], [B[0][3], 8, B[1][3]],
  [A[0][3], 8, A[1][3]], [E[0][3], 8, E[1][3]], [C[0][3], 8, C[1][3]], [B[0][2], 8, B[1][2]],
  [A[0][2], 8, A[1][2]], [E[0][2], 8, E[1][2]], [C[0][2], 8, C[1][2]], [B[0][1], 8, B[1][1]],
  // Fm(add9) - G(add9)
  [F[0][1], 8, F[1][1]], [G[0][1], 8, G[1][1]], [A[0][1], 8, A[1][1]], [C[0][2], 8, C[1][2]],
  [F[0][2], 8, F[1][2]], [G[0][2], 8, G[1][2]], [A[0][2], 8, A[1][2]], [C[0][3], 8, C[1][3]],
  [G[0][1], 8, G[1][1]], [A[0][1], 8, A[1][1]], [B[0][1], 8, B[1][1]], [D[0][2], 8, D[1][2]],
  [G[0][2], 8, G[1][2]], [A[0][2], 8, A[1][2]], [B[0][2], 8, B[1][2]], [D[0][3], 8, D[1][3]],
  // Coda: C(add9) - 8va
  [C[0][1], 8, C[1][1]], [D[0][1], 8, D[1][1]], [E[0][1], 8, E[1][1]], [G[0][1], 8, G[1][1]],
  [C[0][2], 8, C[1][2]], [D[0][2], 8, D[1][2]], [E[0][2], 8, E[1][2]], [G[0][2], 8, G[1][2]],
  [C[0][3], 2, C[1][3]], [0,   4, pauseSymbol] ];

// Stranger Things theme
const trackNotesStrangerThings = [
  [C[0][0], 8, C[1][0]], [E[0][0], 8, E[1][0]], [G[0][0], 8,  G[1][0]], [B[0][0], 8, B[1][0]],
  [C[0][1], 8, C[1][1]], [B[0][0], 8, B[1][0]], [G[0][0], 8,  G[1][0]], [E[0][0], 8, E[1][0]],
  [C[0][0], 8, C[1][0]], [E[0][0], 8, E[1][0]], [G[0][0], 8,  G[1][0]], [B[0][0], 8, B[1][0]],
  [C[0][1], 8, C[1][1]], [B[0][0], 8, B[1][0]], [G[0][0], 8,  G[1][0]], [E[0][0], 8, E[1][0]],
  [C[0][0], 8, C[1][0]], [E[0][0], 8, E[1][0]], [G[0][0], 8,  G[1][0]], [B[0][0], 8, B[1][0]],
  [C[0][1], 8, C[1][1]], [B[0][0], 8, B[1][0]], [G[0][0], 8,  G[1][0]], [E[0][0], 8, E[1][0]],
  [C[0][0], 8, C[1][0]], [E[0][0], 8, E[1][0]], [G[0][0], 8,  G[1][0]], [B[0][0], 8, B[1][0]],
  [C[0][1], 8, C[1][1]], [B[0][0], 8, B[1][0]], [G[0][0], 8,  G[1][0]], [E[0][0], 8, E[1][0]],  
  [C[0][0], 8, C[1][0]], [0,   4, pauseSymbol] ];

// Imperial March (source: StackOverflow)
const trackNotesImperialMarch = [
  [E[0][2], 4, E[1][2]],
  [E[0][2], 4, E[1][2]],
  [E[0][2], 4, E[1][2]],
  [C[0][2], 8, C[1][2]],
  [0,      16, restSymbol],
  [G[0][2],16, G[1][2]],
  [E[0][2], 4, E[1][2]],
  [C[0][2], 8, C[1][2]],
  [0,      16, restSymbol],
  [G[0][2],16, G[1][2]],
  [E[0][2], 4, E[1][2]],
  [0,       4, restSymbol],
  [B[0][2], 4, B[1][2]],
  [B[0][2], 4, B[1][2]],
  [B[0][2], 4, B[1][2]],
  [C[0][3], 8, C[1][3]],
  [0,      16, restSymbol],
  [G[0][2],16, G[1][2]],
  [310,     4, "Eb4"],  // Eb4
  [C[0][2], 8, C[1][2]],
  [0,      16, restSymbol],
  [G[0][2],16, G[1][2]],
  [E[0][2], 4, E[1][2]],
  [0,       4, pauseSymbol] ];

/*          Rest  Note
-----------------------
Whole:      ùÑª     ùÖù
Half:       ùÑº     ùÖû
Quarter:    ùÑΩ     ùÖü
Eighth:     ùÑæ     ùÖ†
Sixteenth:  ùÑø     ùÖ°

            Keys
-----------------------
Sharp:      ùÑ∞ 
Natural:    ùÑÆ
Flat:       ùÑ¨

*/
